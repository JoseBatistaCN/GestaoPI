// <auto-generated />
using System;
using GestaoPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoPI.Migrations
{
    [DbContext(typeof(GestaopiContext))]
    [Migration("20230503133457_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("GestaoPI.Models.Codigodespachospatente", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo")
                        .HasName("PRIMARY");

                    b.ToTable("codigodespachospatente");
                });

            modelBuilder.Entity("GestaoPI.Models.Codigoservicopatente", b =>
                {
                    b.Property<string>("Servico")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("ValorComDesconto")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("ValorSemDesconto")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Servico")
                        .HasName("PRIMARY");

                    b.ToTable("codigoservicopatente");
                });

            modelBuilder.Entity("GestaoPI.Models.Despachopatente", b =>
                {
                    b.Property<string>("PatenteCodigo")
                        .HasMaxLength(19)
                        .HasColumnType("char(19)")
                        .HasColumnName("patente_codigo")
                        .IsFixedLength();

                    b.Property<int>("RevistaCodigo")
                        .HasColumnType("int")
                        .HasColumnName("revista_codigo");

                    b.Property<string>("CodigoDespachosPatenteCodigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CodigoDespachosPatente_Codigo");

                    b.Property<sbyte?>("Cumprido")
                        .HasColumnType("tinyint")
                        .HasColumnName("cumprido");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ValidadeCodigo")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("validade_codigo");

                    b.HasKey("PatenteCodigo", "RevistaCodigo")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "CodigoDespachosPatenteCodigo" }, "fk_DespachoPatente_CodigoDespachosPatente1_idx");

                    b.HasIndex(new[] { "PatenteCodigo" }, "fk_DespachoPatente_patente1_idx");

                    b.HasIndex(new[] { "RevistaCodigo" }, "fk_DespachoPatente_revista1_idx");

                    b.ToTable("despachopatente");
                });

            modelBuilder.Entity("GestaoPI.Models.Patente", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(19)
                        .HasColumnType("char(19)")
                        .HasColumnName("codigo")
                        .IsFixedLength();

                    b.Property<string>("Anotacao")
                        .HasColumnType("text")
                        .HasColumnName("anotacao");

                    b.Property<DateTime?>("Concessao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("concessao");

                    b.Property<DateTime>("Deposito")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deposito");

                    b.Property<DateTime?>("Exame")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("exame");

                    b.Property<DateTime?>("Publicacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("publicacao");

                    b.Property<string>("Resumo")
                        .HasColumnType("mediumtext")
                        .HasColumnName("resumo");

                    b.Property<string>("Status")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("status");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo");

                    b.HasKey("Codigo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Codigo" }, "codigo_UNIQUE")
                        .IsUnique();

                    b.ToTable("patente");
                });

            modelBuilder.Entity("GestaoPI.Models.Revista", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data");

                    b.Property<string>("DespachoPatentePatenteCodigo")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("char(19)")
                        .HasColumnName("DespachoPatente_patente_codigo")
                        .IsFixedLength();

                    b.HasKey("Codigo")
                        .HasName("PRIMARY");

                    b.ToTable("revista");
                });

            modelBuilder.Entity("GestaoPI.Models.Servicopatente", b =>
                {
                    b.Property<int>("ServicoPatenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("servicoPatente_id");

                    b.Property<string>("CodigoPatente")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("codigo_patente");

                    b.Property<string>("PatenteCodigo")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("char(19)")
                        .HasColumnName("patente_codigo")
                        .IsFixedLength();

                    b.Property<string>("ServicoCodigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("servico_codigo");

                    b.Property<decimal?>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ServicoPatenteId")
                        .HasName("PRIMARY");

                    b.HasIndex("ServicoCodigo");

                    b.HasIndex(new[] { "PatenteCodigo" }, "fk_ServicoPatente_patente1_idx");

                    b.ToTable("servicopatente");
                });

            modelBuilder.Entity("GestaoPI.Models.Despachopatente", b =>
                {
                    b.HasOne("GestaoPI.Models.Codigodespachospatente", "CodigoDespachosPatenteCodigoNavigation")
                        .WithMany("Despachopatentes")
                        .HasForeignKey("CodigoDespachosPatenteCodigo")
                        .IsRequired()
                        .HasConstraintName("fk_DespachoPatente_CodigoDespachosPatente");

                    b.HasOne("GestaoPI.Models.Patente", "PatenteCodigoNavigation")
                        .WithMany("Despachopatentes")
                        .HasForeignKey("PatenteCodigo")
                        .IsRequired()
                        .HasConstraintName("fk_DespachoPatente_patente");

                    b.HasOne("GestaoPI.Models.Revista", "RevistaCodigoNavigation")
                        .WithMany("Despachopatentes")
                        .HasForeignKey("RevistaCodigo")
                        .IsRequired()
                        .HasConstraintName("fk_DespachoPatente_revista");

                    b.Navigation("CodigoDespachosPatenteCodigoNavigation");

                    b.Navigation("PatenteCodigoNavigation");

                    b.Navigation("RevistaCodigoNavigation");
                });

            modelBuilder.Entity("GestaoPI.Models.Servicopatente", b =>
                {
                    b.HasOne("GestaoPI.Models.Patente", "PatenteCodigoNavigation")
                        .WithMany("Servicopatentes")
                        .HasForeignKey("PatenteCodigo")
                        .IsRequired()
                        .HasConstraintName("fk_ServicoPatente_patente");

                    b.HasOne("GestaoPI.Models.Codigoservicopatente", "CodigoservicopatenteNavigation")
                        .WithMany("ServicoPatentes")
                        .HasForeignKey("ServicoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoservicopatenteNavigation");

                    b.Navigation("PatenteCodigoNavigation");
                });

            modelBuilder.Entity("GestaoPI.Models.Codigodespachospatente", b =>
                {
                    b.Navigation("Despachopatentes");
                });

            modelBuilder.Entity("GestaoPI.Models.Codigoservicopatente", b =>
                {
                    b.Navigation("ServicoPatentes");
                });

            modelBuilder.Entity("GestaoPI.Models.Patente", b =>
                {
                    b.Navigation("Despachopatentes");

                    b.Navigation("Servicopatentes");
                });

            modelBuilder.Entity("GestaoPI.Models.Revista", b =>
                {
                    b.Navigation("Despachopatentes");
                });
#pragma warning restore 612, 618
        }
    }
}
